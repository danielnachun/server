create or replace table t1 (x int)
partition by hash(x) partitions 2;
alter table t1 extract partition p1 as table tp1;
ERROR HY000: EXTRACT PARTITION can only be used on RANGE/LIST partitions
create or replace table t1 (x int)
partition by key(x) partitions 2;
alter table t1 extract partition p1 as table tp1;
ERROR HY000: EXTRACT PARTITION can only be used on RANGE/LIST partitions
create or replace table t1 (x int)
partition by range(x)
subpartition by hash(x) subpartitions 3 (
partition p1 values less than (10),
partition pn values less than maxvalue);
alter table t1 extract partition p1 as table p1;
ERROR HY000: EXTRACT PARTITION is not supported for subpartitioned table.
alter table t1 extract partition p1sp0 as table p1;
ERROR HY000: Error in list of partitions to EXTRACT
create or replace table t1 (x int)
partition by range(x) (
partition p1 values less than (10));
alter table t1 extract partition p1 as table tp1;
ERROR HY000: Cannot remove all partitions, use DROP TABLE instead
create or replace table t1 (x int)
partition by range(x) (
partition p1 values less than (10),
partition p2 values less than (20),
partition p3 values less than (30),
partition p4 values less than (40),
partition p5 values less than (50),
partition pn values less than maxvalue);
insert into t1 values (2), (12), (22), (32), (42), (52);
create or replace table tp2 (y int);
insert tp2 values (88);
alter table t1 extract partition p2 as table tp2, drop partition p3;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ' drop partition p3' at line 1
alter table t1 extract partition p00 as table tp00;
ERROR HY000: Error in list of partitions to EXTRACT
alter table t1 extract partition p00 as table tp2;
ERROR 42S01: Table 'tp2' already exists
alter table t1 extract partition p2 as table tp2;
ERROR 42S01: Table 'tp2' already exists
select * from tp2;
y
88
drop table tp2;
alter table t1 extract partition p2 as table tp2;
show create table tp2;
Table	Create Table
tp2	CREATE TABLE `tp2` (
  `x` int(11) DEFAULT NULL
) ENGINE=X DEFAULT CHARSET=latin1
select * from tp2;
x
12
show create table t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `x` int(11) DEFAULT NULL
) ENGINE=X DEFAULT CHARSET=latin1
 PARTITION BY RANGE (`x`)
(PARTITION `p1` VALUES LESS THAN (10) ENGINE = X,
 PARTITION `p3` VALUES LESS THAN (30) ENGINE = X,
 PARTITION `p4` VALUES LESS THAN (40) ENGINE = X,
 PARTITION `p5` VALUES LESS THAN (50) ENGINE = X,
 PARTITION `pn` VALUES LESS THAN MAXVALUE ENGINE = X)
select * from t1 order by x;
x
2
22
32
42
52
alter table t1 extract partition p3 as table inexistent.tp3;
ERROR 42000: Unknown database 'inexistent'
create database EXISTENT;
alter table t1 extract partition p3 as table EXISTENT.TP3;
show create table EXISTENT.TP3;
Table	Create Table
TP3	CREATE TABLE `TP3`-ok (
  `x` int(11) DEFAULT NULL
) ENGINE=X DEFAULT CHARSET=latin1
select * from EXISTENT.TP3 order by x;
x
22
show create table t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `x` int(11) DEFAULT NULL
) ENGINE=X DEFAULT CHARSET=latin1
 PARTITION BY RANGE (`x`)
(PARTITION `p1` VALUES LESS THAN (10) ENGINE = X,
 PARTITION `p4` VALUES LESS THAN (40) ENGINE = X,
 PARTITION `p5` VALUES LESS THAN (50) ENGINE = X,
 PARTITION `pn` VALUES LESS THAN MAXVALUE ENGINE = X)
select * from t1 order by x;
x
2
32
42
52
drop database EXISTENT;
drop tables t1, tp2;
# System-versioned tables (RANGE, LIST)
create or replace table t1 (x int)
with system versioning
partition by range(x) (
partition p1 values less than (10),
partition p2 values less than (20),
partition p3 values less than (30),
partition p4 values less than (40),
partition p5 values less than (50),
partition pn values less than maxvalue);
insert into t1 values (2), (12), (22), (32), (42), (52);
update t1 set x= x + 1;
alter table t1 extract partition p2 as table tp2;
show create table tp2;
Table	Create Table
tp2	CREATE TABLE `tp2` (
  `x` int(11) DEFAULT NULL
) ENGINE=X DEFAULT CHARSET=latin1 WITH SYSTEM VERSIONING
select * from tp2;
x
13
select * from tp2 for system_time all order by x;
x
12
13
show create table t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `x` int(11) DEFAULT NULL
) ENGINE=X DEFAULT CHARSET=latin1 WITH SYSTEM VERSIONING
 PARTITION BY RANGE (`x`)
(PARTITION `p1` VALUES LESS THAN (10) ENGINE = X,
 PARTITION `p3` VALUES LESS THAN (30) ENGINE = X,
 PARTITION `p4` VALUES LESS THAN (40) ENGINE = X,
 PARTITION `p5` VALUES LESS THAN (50) ENGINE = X,
 PARTITION `pn` VALUES LESS THAN MAXVALUE ENGINE = X)
select * from t1 order by x;
x
3
23
33
43
53
select * from t1 for system_time all order by x;
x
2
3
22
23
32
33
42
43
52
53
drop tables t1, tp2;
# System-versioned tables (SYSTEM_TIME LIMIT)
create or replace table t1 (
x int,
row_start timestamp(6) as row start invisible,
row_end timestamp(6) as row end invisible,
period for system_time(row_start, row_end)
) with system versioning
partition by system_time limit 1 partitions 4;
insert into t1 values (2), (12), (22);
update t1 set x= x + 1 where x = 2;
update t1 set x= x + 1 where x = 12;
update t1 set x= x + 1 where x = 22;
select * from t1 partition (p1);
x
12
alter table t1 extract partition pn as table tp1;
ERROR HY000: Wrong partitions for `t1`: must have at least one HISTORY and exactly one last CURRENT
alter table t1 extract partition p1 as table tp1;
show create table tp1;
Table	Create Table
tp1	CREATE TABLE `tp1` (
  `x` int(11) DEFAULT NULL,
  `row_start` timestamp(6) GENERATED ALWAYS AS ROW START INVISIBLE,
  `row_end` timestamp(6) GENERATED ALWAYS AS ROW END INVISIBLE,
  PERIOD FOR SYSTEM_TIME (`row_start`, `row_end`)
) ENGINE=X DEFAULT CHARSET=latin1 WITH SYSTEM VERSIONING
select * from tp1;
x
select * from tp1 for system_time all;
x
12
show create table t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `x` int(11) DEFAULT NULL,
  `row_start` timestamp(6) GENERATED ALWAYS AS ROW START INVISIBLE,
  `row_end` timestamp(6) GENERATED ALWAYS AS ROW END INVISIBLE,
  PERIOD FOR SYSTEM_TIME (`row_start`, `row_end`)
) ENGINE=X DEFAULT CHARSET=latin1 WITH SYSTEM VERSIONING
 PARTITION BY SYSTEM_TIME LIMIT 1
(PARTITION `p0` HISTORY ENGINE = X,
 PARTITION `p2` HISTORY ENGINE = X,
 PARTITION `pn` CURRENT ENGINE = X)
select * from t1 order by x;
x
3
13
23
select * from t1 for system_time all order by x;
x
2
3
13
22
23
drop tables t1, tp1;
# System-versioned tables (SYSTEM_TIME INTERVAL)
set timestamp= unix_timestamp('2000-01-01 00:00:00');
create or replace table t1 (
x int,
row_start timestamp(6) as row start invisible,
row_end timestamp(6) as row end invisible,
period for system_time(row_start, row_end)
) with system versioning
partition by system_time interval 1 hour partitions 4;
insert into t1 values (2), (12), (22);
set timestamp= unix_timestamp('2000-01-01 00:00:01');
update t1 set x= x + 1 where x = 2;
set timestamp= unix_timestamp('2000-01-01 01:00:00');
update t1 set x= x + 1 where x = 12;
set timestamp= unix_timestamp('2000-01-01 02:00:00');
update t1 set x= x + 1 where x = 22;
select * from t1 partition (p0);
x
2
select * from t1 partition (p1);
x
12
select * from t1 partition (p2);
x
22
alter table t1 extract partition p1 as table tp1;
ERROR HY000: Can only drop oldest partitions when rotating by INTERVAL
alter table t1 extract partition p0 as table tp0;
alter table t1 extract partition p1 as table tp1;
alter table t1 extract partition p2 as table tp2;
ERROR HY000: Wrong partitions for `t1`: must have at least one HISTORY and exactly one last CURRENT
show create table tp0;
Table	Create Table
tp0	CREATE TABLE `tp0` (
  `x` int(11) DEFAULT NULL,
  `row_start` timestamp(6) GENERATED ALWAYS AS ROW START INVISIBLE,
  `row_end` timestamp(6) GENERATED ALWAYS AS ROW END INVISIBLE,
  PERIOD FOR SYSTEM_TIME (`row_start`, `row_end`)
) ENGINE=X DEFAULT CHARSET=latin1 WITH SYSTEM VERSIONING
show create table tp1;
Table	Create Table
tp1	CREATE TABLE `tp1` (
  `x` int(11) DEFAULT NULL,
  `row_start` timestamp(6) GENERATED ALWAYS AS ROW START INVISIBLE,
  `row_end` timestamp(6) GENERATED ALWAYS AS ROW END INVISIBLE,
  PERIOD FOR SYSTEM_TIME (`row_start`, `row_end`)
) ENGINE=X DEFAULT CHARSET=latin1 WITH SYSTEM VERSIONING
select * from tp0;
x
select * from tp1;
x
select * from tp0 for system_time all;
x
2
select * from tp1 for system_time all;
x
12
show create table t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `x` int(11) DEFAULT NULL,
  `row_start` timestamp(6) GENERATED ALWAYS AS ROW START INVISIBLE,
  `row_end` timestamp(6) GENERATED ALWAYS AS ROW END INVISIBLE,
  PERIOD FOR SYSTEM_TIME (`row_start`, `row_end`)
) ENGINE=X DEFAULT CHARSET=latin1 WITH SYSTEM VERSIONING
 PARTITION BY SYSTEM_TIME INTERVAL 1 HOUR STARTS TIMESTAMP'2000-01-01 02:00:00'
(PARTITION `p2` HISTORY ENGINE = X,
 PARTITION `pn` CURRENT ENGINE = X)
select * from t1;
x
3
13
23
select * from t1 for system_time all order by x;
x
3
13
22
23
drop tables t1, tp0, tp1;
# System-versioned tables (implicit)
create or replace table t1(x int) with system versioning
partition by system_time limit 1 partitions 3;
alter table t1 extract partition p1 as table tp1;
show create table tp1;
Table	Create Table
tp1	CREATE TABLE `tp1` (
  `x` int(11) DEFAULT NULL
) ENGINE=X DEFAULT CHARSET=latin1 WITH SYSTEM VERSIONING
show create table t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `x` int(11) DEFAULT NULL
) ENGINE=X DEFAULT CHARSET=latin1 WITH SYSTEM VERSIONING
 PARTITION BY SYSTEM_TIME LIMIT 1
(PARTITION `p0` HISTORY ENGINE = X,
 PARTITION `pn` CURRENT ENGINE = X)
drop tables t1, tp1;
